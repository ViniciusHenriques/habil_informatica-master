{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml : string;
begin
  Progress('Carregando configurações de XSDDataset.');
  Datasets.XsdElementName := 'ConsultarNfseRpsResposta';
  Datasets.ConfigSection := 'RETORNO_CONSULTARNFSEPORRPS';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;
  
  _Xml := StringReplace(Input, 'xsi:type="s01:Signature"', '', [rfReplaceAll]);
  
  if Pos('<!--CRLF-->', Input) > 0 then
  begin
    _Xml := StringReplace(_Xml, '<!--CRLF-->', #13#10, [rfReplaceAll]);
    _Xml := XmlDeepNodeSearch(_Xml, 'ConsultarNfsePorRpsResult', '//*[local-name()="ConsultarNfsePorRpsResult"]');
    _Xml := StringReplace(_Xml, #13#10, '<!--CRLF-->', [rfReplaceAll]);
  end
  else
    _Xml := XmlDeepNodeSearch(_Xml, 'ConsultarNfsePorRpsResult', '//*[local-name()="ConsultarNfsePorRpsResult"]');

  _Xml := StringReplace(_Xml, '<ConsultarNfsePorRpsResult', '<ConsultarNfseRpsResposta', []);
  _Xml := StringReplace(_Xml, '</ConsultarNfsePorRpsResult>', '</ConsultarNfseRpsResposta>', []);

  if Pos('<faultstring',input) > 0 then
    Params.Add('faultstring='+input)
  else
  begin
    Datasets.LoadFromXMLContent(_Xml);
    _Xml := XmlSelect(_Xml, '//*[local-name()="Nfse"]');
    Params.Add('XmlNFSe='+_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
