{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

{$I Utils.txt}

Var
  _Xml: string;
begin
  if Pos('<faultstring',input) > 0 then
  begin
    Input := StringReplace(Input, #13#10, '', [rfReplaceAll]);
    Params.Add('faultstring='+input);
  end
  else
  begin
    Progress('Carregando configurações de XSDDataset.');
    Datasets.ConfigSection := 'RETORNO_ENVIOSINCRONO';

    if Trim(MappingXsdFileName) <> '' then
      Datasets.MappingFileName := MappingXsdFileName;

    Progress('Criando XSDDataset.');
    Datasets.CreateXSDDataset;

    _Xml := StringReplace(Input, 'GerarNfseResult', 'GerarNfseResposta', [rfReplaceAll]);
    _Xml := StringReplace(_Xml, '<![CDATA[', '', [rfReplaceAll]);
    _Xml := StringReplace(_Xml, ']]>', '', [rfReplaceAll]);
    _Xml := XmlDeepNodeSearch(_Xml, Datasets.XsdElementName, '//*[local-name()="GerarNfseResposta"]');

    Params.Add('XmlNfse=' + _Xml);
    Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.