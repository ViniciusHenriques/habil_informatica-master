{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

Var
  _ListFields : TStringList;
  _Status, _Motivo, _Xml, _XmlNota: string;

{$I ..\Comuns\Utils.TXT}
{$I ..\Comuns\Comuns.txt}

  function RetornouDadosNota(const aXML:string): Boolean;
  Var
    _Value : string;
  begin
    Result := (xmlSelectNodeValue(aXml, '//*[local-name()="Table"]', _Value)) and
      (_Value <> '');
  end;

  function GetStatusNota : string;
  begin
    if (Pos('EMITIDA', Params.Values['XML']) = 0) then
      if (Pos('CANCELADA', Params.Values['XML']) = 0) then
        Result := 'ERRO'
      else
        Result := 'SUCESSO'
    else
      Result := 'SUCESSO';
  end;

  function GetMotivoNota : string;
  begin
    if (pos('<faultstring>', params.values['ERRO']) > 0) then
    begin
      Result := XmlSelect(params.values['ERRO'], '//*[local-name()="faultstring"]')
    end
  else
    Result := Params.Values['Erro'];
  end;
  
  function GetSituacaoNota(const aXml: string): string;
  Var
    _Situacao: string;
  begin
    _Situacao := LowerCase(GetValueTag('Status', _Xml));
    if _Situacao = 'emitida' then
      Result := 'AUTORIZADA'
    else
      Result := 'CANCELADA';
  end;

begin
  Output := '';
  Progress('Adicionando valores aos campos');

  _Xml := Params.Values['XML'];
  if _Xml = '' then
    _Xml := Params.Values['ERRO'];

  _Status := GetStatusNota;
  _Motivo := GetMotivoNota;

  if _Status = 'ERRO' then
  begin
    Try
      _ListFields := CreateFieldsResponseFalha;
      AddValueListFields('Status', 'ERRO', _ListFields);
      if _Motivo = '' then
        AddValueListFields('Motivo', 'Consulta de NFSe não retornou nota, verifique os dados.', _ListFields)
      else
        AddValueListFields('Motivo', _Motivo, _ListFields);
      Output := FormatLineResult(_ListFields);
    Finally
      _ListFields.Free;
    end;
  end
  else
  begin
    _ListFields := CreateFieldsResponseNota;
    if ((_ListFields <> nil) and (_ListFields.Text <> '')) then
    begin
      try
        if RetornouDadosNota(_Xml) then
        begin
          _Xml := StringReplace(_Xml, Params.Values['DelimitadorDoCampo'], '\delimiter',[rfReplaceAll]);
          AddValueListFields('Motivo', _Motivo, _ListFields);
          AddValueListFields('Status', _Status, _ListFields);
          AddValueListFields('Cnpj', GetValueTag('CNPJCPFPrestador', _Xml), _ListFields);
          AddValueListFields('InscMunicipal', GetValueTag('InscricaoMunicipalPrestador', _Xml), _ListFields);
          AddValueListFields('SerieRps', '', _ListFields);
          AddValueListFields('NumeroRps', '', _ListFields);
          AddValueListFields('NumeroNFSe', GetValueTag('NumeroNF', _Xml), _ListFields);
          AddValueListFields('DataEmissaoNFSe', GetValueTag('DtEmissao', _Xml), _ListFields);
          AddValueListFields('DataAutorizacao', GetValueTag('DtEmissao', _Xml), _ListFields);
          AddValueListFields('CodVerificacao', '', _ListFields);
          AddValueListFields('Situacao', GetSituacaoNota(_Xml), _ListFields);
          AddValueListFields('DataCancelamento', '', _ListFields);
          AddValueListFields('ChaveCancelamento', GetValueTag('NumeroNF', _Xml), _ListFields);
          AddValueListFields('Xml', _Xml, _ListFields);
          AddValueListFields('Tipo', '', _ListFields);
        end;

        if (Params.Values['DelimitadorDaLinha'] = '') then
          Output := FormatLineResult(_ListFields) + #13#10
        else
          Output := FormatLineResult(_ListFields) + Params.Values['DelimitadorDaLinha'];
      Finally
        _ListFields.Free;
      end;
    end;
  end;
  Progress('Valores adicionados com sucesso.');
end.