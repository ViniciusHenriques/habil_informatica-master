{
  Variveis externas disponveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Params: TStringList;
    Datasets: TspdXSDDataset;
}

var
  _Tx2, _CamposMunicipio: TStringList;
  _DsTecnoAtual, _DsCidadeAtual: TSpdXSDClientDataSet;
  _PadraoTecnoNFSe, _setar: Boolean;
  _ValorCampo, _NomeCampo, _Linha, _PastaTecnoNFSe: string;
  _Inicio, _QtdeRps: Integer;
  DSCIDADE_NOTA: string;

const
  DSTECNO_LOTE = 'TecnoNFSe';
  DSTECNO_NOTA = 'Rps';
  DSCIDADE_LOTE = 'EnviarLoteRpsEnvio';


{$I ..\Comuns\RotinasLerSetarCampos.txt}
{$I ..\Comuns\FormatarCodigoItemListaServico.txt}
{$I ..\Comuns\EhComando.txt}
{$I ..\Comuns\PrepararTecnoNFSeDatasets.txt}
{$I ..\Comuns\CriarDatasets.txt}
{$I ..\Comuns\CarregarTX2.txt}
{$I ..\Comuns\SetarCamposMunicipio.txt}
{$I ..\Comuns\FormataFloat.txt}
{$I ..\Comuns\Comuns.txt}

  function EnvioSincrono: Boolean;
  begin
    if (UpperCase(Params.Values['EnvioSincrono'])) = 'TRUE' then
      Result := True
  end;

  procedure ExceptionValorInvalidoCampo(const aCampo: string);
  begin
    RaiseException('Valor inválido para o campo ' + aCampo);
  end;

begin
  Progress('Criando XSDDataset');
  CriarDatasets;

  _Tx2 := TStringList.Create;
  _CamposMunicipio := TStringList.Create;

  try
    Progress('Carregando contedo/arquivo TX2');
    CarregarTX2;

    _DsTecnoAtual := nil;

    if _PadraoTecnoNFSe then
    begin
      if EnvioSincrono then
        DSCIDADE_NOTA := 'GerarNfseEnvio'
      else
        DSCIDADE_NOTA := 'Rps';

      Progress('Usando Padro TecnoNFSe: preparando datasets');
      PrepararTecnoNFSeDatasets;

      Progress('Usando Padro TecnoNFSe: carregando dados das notas');
      _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA);
      _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_NOTA);

      _QtdeRps := _DsTecnoAtual.RecordCount;

      if ((EnvioSincrono) and (_QtdeRps > 1)) then
        RaiseException('Envio síncrono no suporta envio em Lote, envie somente 1 RPS.');

      _DsTecnoAtual.First;
      while not _DsTecnoAtual.Eof do
      begin
        _DsCidadeAtual.Append;

        // Dados RPS
        if CampoTecno('IdRps') <> '' then
          SetarCampo('IdRps')
        else
        begin
          _ValorCampo := Format3('RPS_%s_%s_%s', CampoTecno('NumeroRps'),
            CampoTecno('SerieRps'), CampoTecno('TipoRps'));
          SetarCampoValor('IdRps', _ValorCampo);
        end;

        SetarCampoValorTamanhoObrigatorio('NumeroRps', CampoTecno('NumeroRps'), 15);
        SetarCampoValorTamanhoObrigatorio('SerieRps', CampoTecno('SerieRps'), 5);
        SetarCampoValorTamanhoObrigatorio('TipoRps', CampoTecno('TipoRps'), 1);
        
        _ValorCampo := FormatAnyDateTime(CampoTecno('DataEmissao'), 'yyyy-mm-dd');
        SetarCampoValorTamanhoObrigatorio('DataEmissao', _ValorCampo, 10);

        _ValorCampo := CampoTecno('SituacaoNota');
        case _ValorCampo of
          '1', '2': SetarCampoValor('Status', CampoTecno('SituacaoNota'))
          else
            ExceptionValorInvalidoCampo('SituacaoNota. Valores aceitos: 1  Normal, 2  Cancelado');
        end;

        SetarCampoValorTamanho('NumeroRpsSubstituido', CampoTecno('NumeroRpsSubstituido'), 15);
        SetarCampoValorTamanho('SerieRpsSubstituido', CampoTecno('SerieRpsSubstituido'), 5);
        SetarCampoValorTamanho('TipoRpsSubstituido', CampoTecno('TipoRpsSubstituido'), 1);

        //Competencia
        _ValorCampo := CampoTecno('Competencia'); 
        if _ValorCampo <> '' then
        begin
          _ValorCampo := FormatAnyDateTime(_ValorCampo, 'yyyy-mm-dd');
          SetarCampoValor('Competencia', _ValorCampo);
        end
        else
        begin
          _ValorCampo := FormatAnyDateTime(CampoTecno('DataEmissao'), 'yyyy-mm-dd');
          SetarCampoValor('Competencia', _ValorCampo);
        end;

        //Dados Servico
        SetarCampoCurrency('ValorServicos', True);
        SetarCampoCurrency('ValorDeducoes', False);
        SetarCampoCurrency('ValorPis', False);
        SetarCampoCurrency('ValorCofins', False);
        SetarCampoCurrency('ValorInss', False);
        SetarCampoCurrency('ValorIr', False);
        SetarCampoCurrency('ValorCsll', False);
        SetarCampoCurrency('OutrasRetencoes', False);
        SetarCampoCurrency('ValorIss', False);

        _setar := True;
        if DivideCampoPorcentagem(CampoTecno('AliquotaISS')) then
        begin
          _ValorCampo := StringReplace(CampoTecno('AliquotaISS'), ',', '.',[]);
          FormataFloat(StrToFloat(_ValorCampo), 6, 4);
          SetarCampoValor('Aliquota', _ValorCampo);
          _setar := False;
        end
        else if _setar then
          ExceptionValorInvalidoCampo('AliquotaISS');

        SetarCampoCurrency('DescontoIncondicionado', False);
        SetarCampoCurrency('DescontoCondicionado', False);

        case AnsiIndexText(CampoTecno('IssRetido'), ['1', 'sim', 'true', '2', 'nao', 'no',
          'false']) of
          0, 1, 2: SetarCampoValor('IssRetido', '1');
          3, 4, 5, 6: SetarCampoValor('IssRetido', '2');
        else
          ExceptionValorInvalidoCampo('IssRetido. Valores aceitos: 1, sim, true, 2, nao, no, false.');
        end;
        { Identificao do responsvel pela reteno do ISS
          1  Tomador
          2  Intermedirio}
        _ValorCampo := CampoTecno('ResponsavelRetencao');
        case _ValorCampo of
          '', '1', '2': SetarCampoValor('ResponsavelRetencao', CampoTecno('ResponsavelRetencao'))
          else
            ExceptionValorInvalidoCampo('ResponsavelRetencao. Valores aceitos: 1 – Tomador, 2 – Intermediário');
        end;

        // Abrasf 2.1 (ex: Vitoria), Abrasf 2.2 (ex: Joao Pessoa): com ponto no ItemListaServico
        _ValorCampo := CampoTecno('CodigoItemListaServico');
        _ValorCampo := FormatarCodigoItemListaServico(_ValorCampo, True);
        SetarCampoValorTamanhoObrigatorio('ItemListaServico', _ValorCampo, 5);

        SetarCampoValorTamanho('CodigoCnae', CampoTecno('CodigoCnae'), 7);
        SetarCampoValorTamanho('CodigoTributacaoMunicipio', CampoTecno('CodigoTributacaoMunicipio'), 7);

        // 2000 caracteres
        SetarCampoValorTamanhoObrigatorio('Discriminacao', CampoTecno('DiscriminacaoServico'), 2000);
        SetarCampoValorTamanhoObrigatorio('CodigoMunicipio', CampoTecno('CodigoCidadePrestacao'), 7);
        
        _ValorCampo := CampoTecno('CodigoPais');
        case AnsiIndexText(_ValorCampo, ['1058', '01058', 'BRASIL', 'brasil', 'Brasil']) of
          0, 1, 2, 3, 4: SetarCampoValor('CodigoPais', '1058')
        else
          SetarCampoValorTamanho('CodigoPais', _ValorCampo, 4);
        end;    

        _ValorCampo := CampoTecno('ExigibilidadeIss');
        if AnsiMatchText(_ValorCampo, ['1','2','3','4','5','6','7']) then
          SetarCampo('ExigibilidadeIss')
        else
          ExceptionValorInvalidoCampo('ExigibilidadeIss. Valores aceitos: 1, 2, 3, 4, 5, 6, 7.');
          
        SetarCampoValorTamanho('MunicipioIncidencia', CampoTecno('MunicipioIncidencia'), 7);

        //Dados Prestador
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjPrestador'));
        case Length(_ValorCampo) of
          11: SetarCampoValor('CpfPrestador', _ValorCampo);
          14: SetarCampoValor('CnpjPrestador', _ValorCampo);
        else
          RaiseException('Para essa cidade o campo CpfCnpjPrestador é obrigatório e deve conter 11 ou 14 caracteres.');
        end;
        
        SetarCampoValorTamanho('InscricaoMunicipalPrestador', RemoveMascara(CampoTecno('InscricaoMunicipalPrestador')), 15);

        //Dados Tomador
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjTomador'));
        SetarCampoCpfCnpj('CpfTomador', 'CnpjTomador', _ValorCampo);
        SetarCampoValorTamanho('InscricaoMunicipalTomador', RemoveMascara(CampoTecno('InscricaoMunicipalTomador')), 15);
        SetarCampoValorTamanho('RazaoSocialTomador', CampoTecno('RazaoSocialTomador'), 150);
        SetarCampoValorTamanho('InscricaoMunicipalTomador', RemoveMascara(CampoTecno('InscricaoMunicipalTomador')), 15);
        SetarCampoValorTamanho('CodigoMunicipioTomador', RemoveMascara(CampoTecno('CodigoCidadeTomador')), 7);
        SetarCampoValorTamanho('EnderecoTomador', CampoTecno('EnderecoTomador'), 125);
        SetarCampoValorTamanho('NumeroTomador', CampoTecno('NumeroTomador'), 10);
        SetarCampoValorTamanho('ComplementoTomador', CampoTecno('ComplementoTomador'), 60);
        SetarCampoValorTamanho('BairroTomador', CampoTecno('BairroTomador'), 60);
        SetarCampoValorTamanho('UfTomador', CampoTecno('UfTomador'), 2);
        
        _ValorCampo := CampoTecno('PaisTomador');
        case AnsiIndexText(_ValorCampo, ['1058', '01058', 'BRASIL', 'brasil', 'Brasil']) of
          0, 1, 2, 3, 4: SetarCampoValor('CodigoPaisTomador', '1058')
        else
          SetarCampoValorTamanho('CodigoPaisTomador', _ValorCampo, 4);
        end;
        
        SetarCampoValorTamanho('CepTomador', CampoTecno('CepTomador'), 8);
        VerificaDDD('TelefoneTomador', 'TelefoneTomador', 'DDDTomador');
        SetarCampoValorTamanho('EmailTomador', CampoTecno('EmailTomador'), 80);

        //Dados Intermediario
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjIntermediario'));
        SetarCampoCpfCnpj('CpfIntermediario', 'CnpjIntermediario', _ValorCampo);
        SetarCampoValorTamanho('InscricaoMunicipalIntermediario', RemoveMascara(CampoTecno('InscricaoMunicipalIntermediario')), 15);
        SetarCampoValorTamanho('RazaoSocialIntermediario', CampoTecno('RazaoSocialIntermediario'), 150);

        //Dados Construcao Civil
        SetarCampoValorTamanho('CodigoObra', CampoTecno('CodigoObra'), 15);
        SetarCampoValorTamanho('Art', CampoTecno('Art'), 15);

        //Regime Especial Tributao
        _ValorCampo := CampoTecno('RegimeEspecialTributacao');
        if (_ValorCampo <> '') and (_ValorCampo <> '0') then
        begin
          if AnsiMatchText(_ValorCampo, ['1','2','3','4','5','6']) then
            SetarCampo('RegimeEspecialTributacao')
          else
            ExceptionValorInvalidoCampo('RegimeEspecialTributacao. Valores aceitos: 1, 2, 3, 4, 5, 6.');            
        end;

        //Optante Simples
        _ValorCampo := CampoTecno('OptanteSimplesNacional');
        case _ValorCampo of
          '1', '2': SetarCampo('OptanteSimplesNacional')
          else
            ExceptionValorInvalidoCampo('OptanteSimplesNacional. Valores aceitos: 1, 2.');
        end;

        //IncentivoFiscal
        SetarCampoValorTamanhoObrigatorio('IncentivoFiscal', CampoTecno('IncentivoFiscal'), 2);

        _DsCidadeAtual.Post;
        _DsTecnoAtual.Next;
      end;
      //Setando campos customizados(@)
      SetarCamposMunicipio(false);

      // Atribuir os campos do lote
      if not(EnvioSincrono) then
      begin
        Progress('Usando Padro TecnoNFSe: carregando dados do lote');
        Datasets.GetDataSetByName(DSCIDADE_LOTE).Insert;

        _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_LOTE);
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_LOTE);

        // IdLote  deduzvel do NumeroLote
        if CampoTecno('IdLote') <> '' then
          SetarCampo('IdLote')
        else
        begin
          _ValorCampo := 'LOTE_' + CampoTecno('NumeroLote');
          SetarCampoValor('IdLote', _ValorCampo);
        end;

        // Item do checklist - deduzir campo verso.
        _ValorCampo := CampoTecno('Versao');
        if (_ValorCampo <> '') then
          SetarCampoValor('Versao', _ValorCampo)
        else
          SetarCampoValor('Versao', '2.01');

        SetarCampoValorTamanhoObrigatorio('NumeroLote', CampoTecno('NumeroLote'), 15);

        //Deduo campo CpfCnpjRemetente
        _ValorCampo := CampoTecno('CpfCnpjRemetente');
        if _ValorCampo = '' then
          _ValorCampo := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('CpfCnpjPrestador').AsString;
        SetarCampoCpfCnpj('Cpf', 'Cnpj', RemoveMascara(_ValorCampo));

        //Deduo campo InscricaoMunicipalRemetente
        _ValorCampo := CampoTecno('InscricaoMunicipalRemetente');
        if _ValorCampo = '' then
          _ValorCampo := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName(
            'InscricaoMunicipalPrestador').AsString;
        SetarCampoValor('InscricaoMunicipal', RemoveMascara(_ValorCampo));

        //Deduo quantidade
        if CampoTecno('QuantidadeRps') <> '' then
          SetarCampo('QuantidadeRps')
        else
          SetarCampoValor('QuantidadeRps', IntToStr(_QtdeRps));

        Datasets.GetDataSetByName(DSCIDADE_LOTE).Post;
      end;
    end
    else
      Datasets.LoadFromTx2Content(_Tx2.Text);
  finally
    _Tx2.free;
    _CamposMunicipio.free;
    Progress('Arquivo TX2 carregado com Sucesso')
  end;
end.
