{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Params: TStringList;
    Datasets: TspdXSDDataset;
}
var
  _Tx2: TStringList;
  _CamposMunicipio: TStringList;
  _inicio: Integer;
  _PadraoTecnoNFSe: Boolean;
  _linha: string;
  _NomeCampo: string;
  _ValorCampo: string;
  _IssRetido: string;
  _LocalTributacao: string;
  _CodMunPrestador: string;
  _CodMunTomador: string;
  _PastaTecnoNFSe: string;
  _Versao: string;
  _DsTecnoAtual: TSpdXSDClientDataSet;  
  _DsCidadeAtual: TSpdXSDClientDataSet;
  _DsCidadeServicoAtual: TSpdXSDClientDataSet;
  _Vlr: Double;
  _cdsPaises: TStringList;  
  _QtdeRps,_QtdeServicos,_NumeroServico: Integer;
  _vServ, _vISS,_vDesc,_vBC: Currency;
const
  DSTECNO_LOTE = 'TecnoNFSe';
  DSTECNO_NOTA = 'Rps';
  DSTECNO_SERVICO = 'Servico';
  DSCIDADE_LOTE = 'envioLote';
  DSCIDADE_NOTA = 'NFS_e';
  DSCIDADE_SERV = 'det';
  DSCIDADE_ADIC = 'infAdic';
  DSCIDADE_FATURA = 'fat';
  DSTECNO_PAGAMENTO = 'FormaPagamento';

{$I ..\Comuns\RotinasLerSetarCampos.txt}
{$I ..\Comuns\BuscarInfoCidade.txt}
{$I ..\Comuns\FormatarCodigoItemListaServico.txt}
{$I ..\Comuns\EhComando.txt}
{$I ..\Comuns\CriarDatasets.txt}
{$I ..\Comuns\PrepararTecnoNFSeDatasetsItens.txt}
{$I ..\Comuns\CarregarTX2.txt}
{$I ..\Comuns\FormataFloat.txt}
{$I ..\Comuns\SetarCamposMunicipioDs.txt}
{$I ..\Comuns\Comuns.txt}

begin
  Progress('Criando XSDDataset');
  CriarDatasets;

  _tx2 := TStringList.Create;
  _CamposMunicipio := TStringList.Create;
  _cdsPaises := TStringList.Create;

  try
    Progress('Carregando conteúdo/arquivo TX2');
    CarregarTX2;

    _DsTecnoAtual := nil;

    if _PadraoTecnoNFSe then
    begin
      Progress('Usando Padrão TecnoNFSe: preparando datasets');
      PrepararTecnoNFSeDatasetsItens;
      
      _cdsPaises.LoadFromFile(_PastaTecnoNFSe + 'Paises.txt');
      // Passar dados para o Datasets, convertendo do padrão TecnoNFSe para o padrão da Cidade
      Datasets.GetDataSetByName(DSCIDADE_LOTE).Insert;

      //Começando com o lote
      Progress('Usando Padrão TecnoNFSe: carregando dados das notas');
      _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA);
      _DsCidadeAtual := Datasets.GetDataSetByName('envioLote');
      _DsCidadeAtual.Append;
      SetarCampoValor('versao', '1.0');
      _ValorCampo := RemoveMascara(TecnoNFSeDS.GetDataSetByName(DSTECNO_LOTE).FieldByName('CpfCnpjRemetente').AsString); //
      if _ValorCampo = '' then
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjPrestador'));
      VerificaSeEhNumero('CpfCnpjRemetente', _ValorCampo);
      case Length(_ValorCampo) of
        14:
          SetarCampoValor('CNPJ', _ValorCampo);
      else
        RaiseException('Valor inválido para o campo CpfCnpjRemetente, CNPJ: 14 Caracteres.');
      end;

      _ValorCampo := RemoveMascara(CampoTecno('DataEmissao'));
      if (_ValorCampo <> '') and ((Length(_ValorCampo) = 17) or (Length(_ValorCampo) = 8) or (Length(_ValorCampo) = 15)) then
      begin
        _ValorCampo := FormatAnyDateTime(CampoTecno('DataEmissao'), 'YYYY-MM-DD hh:mm:ss');
        SetarCampoValor('dhTrans', _ValorCampo);
      end
      else
        RaiseException('Para essa cidade o campo DataEmissao é obrigatorio e deve ser no seguinte formato: YYYY-MM-DDThh:mm:ss');

      _DsCidadeAtual.Post;

      _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_NOTA);
      _QtdeRps := _DsTecnoAtual.RecordCount;
      _DsTecnoAtual.First;

      while not _DsTecnoAtual.Eof do
      begin
        _DsCidadeAtual.Append;
        //Nó Id
        SetarCampoValor('versao', '1.1');
        SetarCampoValor('mod', '98');
        SetarCampoValor('tpNF', '1');
        SetarCampoValor('tpEmis', 'N');
        SetarCampoValor('tpImp', '1');

        if UpperCase(Params.Values['Cidade']) <> 'GARIBALDIRS' then
        begin
          SetarCampoValor('ambienteEmi', '2'); //Fixo no Script, sobrescreve na assinatura
          SetarCampoValor('formaEmi', '2');
          SetarCampoValor('empreitadaGlobal', '2');
        end;
        SetarCampoValor('refNF', '000000000000000000000000000000000000000'); //Fixo no Script, sobrescreve na assinatura


        _ValorCampo := CampoTecno('NumeroRps');
        VerificaSeEhNumero('NumeroRps', _ValorCampo);
        SetarCampoObrigatorioTamanho('NumeroRps', 'cNFS_e', 9);
        SetarCampoObrigatorioTamanho('NumeroRps', 'nNFS_e', 9);

        SetarCampoObrigatorioTamanho('SerieRps', 'serie', 3);

        _ValorCampo := FormatAnyDateTime(CampoTecno('DataEmissao'), 'YYYY-MM-DD');
        SetarCampoValor('dEmi', _ValorCampo);
        _ValorCampo := FormatAnyDateTime(CampoTecno('DataEmissao'), 'hh:mm');
        SetarCampoValor('hEmi', _ValorCampo);

        //Nó prest
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjPrestador'));
        if _ValorCampo = '' then
          _ValorCampo := RemoveMascara(TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('CpfCnpjRemetente').AsString);
        SetarCampoValor('CNPJ', _ValorCampo);

        SetarCampoObrigatorioTamanho('RazaoSocialPrestador', 'xNome', 150);
        SetarCampoObrigatorioTamanho('RazaoSocialPrestador', 'xFant', 150);

        _ValorCampo := RemoveMascara(CampoTecno('InscricaoMunicipalPrestador'));
        if _ValorCampo = '' then
          _ValorCampo := RemoveMascara(TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('InscricaoMunicipalRemetente').AsString);
        SetarCampoObrigatorioValorTamanho('IM', 'InscricaoMunicipalPrestador', _ValorCampo, 15);

        SetarCampoTamanho('EmailPrestador', 'xEmail', 50);
        SetarTelefone('TelefonePrestador', 'fone', 'DDDPrestador');
        SetarCampoTamanho('InscricaoEstadualPrestador', 'IE', 15);

        if CampoTecno('OptanteSimplesNacional') = '1' then
        begin
          if CampoTecno('RegimeEspecialTributacao') = '5' then
            SetarCampoValor('regimeTrib', '2')
          else
            SetarCampoValor('regimeTrib', '1');
        end
        else
          SetarCampoValor('regimeTrib', '3');

        SetarCampoObrigatorioTamanho('EnderecoPrestador', 'xLgr', 100);
        SetarCampoObrigatorioTamanho('NumeroPrestador', 'nro', 6);
        SetarCampoObrigatorioTamanho('BairroPrestador', 'xBairro', 100);
        SetarCampoTamanho('ComplementoPrestador', 'xCpl', 100);

        _CodMunPrestador := CampoTecno('CodigoCidadePrestador');
        try
          _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunPrestador, 'CodIBGE');
          SetarCampoValor('cMun', _ValorCampo);
          _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunPrestador, 'UF');
          SetarCampoValor('UF', _ValorCampo);
          _ValorCampo := '';
          _ValorCampo := CampoTecno('DescricaoCidadePrestador');
          if _ValorCampo = '' then
            _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunPrestador, 'NomeMunicSIAFI');
          SetarCampoValor('xMun', _ValorCampo);
        except
          RaiseException('Valor inválido para o campo CodigoCidadePrestador. Esperado código IBGE.')
        end;

        _ValorCampo := CampoTecno('CepPrestador');
        VerificaSeEhNumero('CepPrestador', _ValorCampo);
        SetarCampoObrigatorioTamanho('CepPrestador', 'CEP', 8);
        SetarCampoValor('cPais', '1058');
        SetarCampoValor('xPais', 'Brasil');

        //Nó TomS
        _ValorCampo := RemoveMascara(CampoTecno('CpfCnpjTomador'));
        VerificaSeEhNumero('CpfCnpjTomador', _ValorCampo);
        case Length(_ValorCampo) of
          0:
            SetarCampoValor('CPFTomador', '00000000000');
          11:
            SetarCampoValor('CPFTomador', _ValorCampo);
          14:
            SetarCampoValor('CNPJTomador', _ValorCampo);
        else
          RaiseException('Valor inválido para o campo CpfCnpjTomador, CPF: 11 Caracteres; CNPJ: 14 Caracteres.');
        end;

        SetarCampoTamanho('RazaoSocialTomador', 'xNomeTomador', 100);
        _ValorCampo := StringReplace(CampoTecno('EmailTomador'), ' ', '', [rfReplaceAll]);
        SetarCampoValorTamanho('xEmailTomador', _ValorCampo, 120);

        _ValorCampo := RemoveMascara(CampoTecno('InscricaoMunicipalTomador'));
        VerificaSeEhNumero('InscricaoMunicipalTomador', _ValorCampo);
        SetarCampoValorTamanho('IMTomador', RemoveMascara(CampoTecno('InscricaoMunicipalTomador')), 15);

        _ValorCampo := RemoveMascara(CampoTecno('InscricaoEstadualTomador'));
        VerificaSeEhNumero('InscricaoEstadualTomador', _ValorCampo);
        SetarCampoValorTamanho('IETomador', RemoveMascara(CampoTecno('InscricaoEstadualTomador')), 15);

        SetarTelefone('TelefoneTomador', 'foneTomador', 'DDDTomador');

        SetarCampoTamanho('EnderecoTomador', 'xLgrTomador', 100);
        SetarCampoTamanho('NumeroTomador', 'nroTomador', 6);
        SetarCampoTamanho('ComplementoTomador', 'xCplTomador', 100);
        SetarCampoTamanho('BairroTomador', 'xBairroTomador', 100);

        if AnsiMatchText(UpperCase(CampoTecno('PaisTomador')), ['01058', '1058', 'BRASIL', '']) then
        begin
          _CodMunTomador := CampoTecno('CodigoCidadeTomador');
          try
            _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunTomador, 'CodIBGE');
            SetarCampoValor('cMunTomador', _ValorCampo);
            _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunTomador, 'UF');
            SetarCampoValor('UFTomador', _ValorCampo);
            _ValorCampo := '';
            _ValorCampo := CampoTecno('DescricaoCidadeTomador');
            if _ValorCampo = '' then 
              _ValorCampo := BuscarInfoCidade('CodIBGE', _CodMunTomador, 'NomeMunicSIAFI');
            SetarCampoValor('xMunTomador', _ValorCampo);
          except
            RaiseException('Valor inválido para o campo CodigoCidadeTomador. Esperado código IBGE.')
          end;
          _ValorCampo := CampoTecno('CEPTomador');
          VerificaSeEhNumero('CEPTomador', _ValorCampo);
          SetarCampoTamanho('CEPTomador', 'CEPTomador', 8);
          SetarCampoValor('cPaisTomador', '1058');
          SetarCampoValor('xPaisTomador', 'Brasil');
        end
        else
        begin
          SetarCampoValor('cMunTomador', '0000000');
          SetarCampoValor('UFTomador', 'EX');
          SetarCampoValor('cPaisTomador', CampoTecno('PaisTomador')); 
          _ValorCampo := _cdsPaises.Values[IntToStr(StrToInt(CampoTecno('PaisTomador')))];
          SetarCampoValor('xPaisTomador', _ValorCampo);
        end;

        //Nó det
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_SERV);
        _DsCidadeAtual.Append;
        _NumeroServico := 0;
        SetarCampoValor('nItem', '1');
        _ValorCampo := CampoTecno('CodigoCnae');
        if _ValorCampo = '' then 
          SetarCampoObrigatorioTamanho('CodigoTributacaoMunicipio', 'cServ', 60)
        else
          SetarCampoObrigatorioTamanho('CodigoCnae', 'cServ', 60);

        _ValorCampo := CampoTecno('CodigoItemListaServico');
        _ValorCampo := FormatarCodigoItemListaServico(_ValorCampo, False);  // Infisc: sem ponto no ItemListaServico
        VerificaSeEhNumero('CodigoItemListaServico', _ValorCampo);
        SetarCampoObrigatorioValorTamanho('cLCServ', 'CodigoItemListaServico', _ValorCampo, 4);

        SetarCampoObrigatorioTamanho('DiscriminacaoServico', 'xServ', 500);

        _ValorCampo := CampoTecno('MunicipioIncidencia');
        try
          _ValorCampo := BuscarInfoCidade('CodIBGE', _ValorCampo, 'CodIBGE');
          SetarCampoValor('localTributacao', _ValorCampo);
          _LocalTributacao := _ValorCampo;
        except
          RaiseException('Valor inválido para o campo MunicipioIncidencia. Esperado código IBGE.')
        end;
        SetarCampoValor('localVerifResServ', '1');
        SetarCampoValor('uTrib', 'un');

        SetarCampoCurrencyValor('QuantidadeServicos', 'qTrib', true);

        _ValorCampo := CampoCidade('qTrib');
        if _ValorCampo = '0.00' then
          SetarCampoValor('qTrib', '1.00');

        SetarCampoCurrencyValor('ValorUnitarioServico', 'vUnit', true);
        _ValorCampo := CampoCidade('vUnit');
        if _ValorCampo = '0.00' then
          SetarCampoCurrencyValor('ValorServicos', 'vUnit', true);

        SetarCampoCurrencyValor('DescontoIncondicionado', 'vDesc', true);
        _ValorCampo := CampoCidade('vDesc');
        if _ValorCampo <> '0.00' then
        begin
          _vServ := (AnyCurrencyToCurrency(CampoTecno('ValorServicos'))) - (AnyCurrencyToCurrency(CampoTecno('DescontoIncondicionado')));
          SetarCampoValor('vServ', CurrencyToXsdCurrency(_vServ));
        end
        else
          SetarCampoCurrencyValor('ValorServicos', 'vServ', true);

        case AnsiIndexText(CampoTecno('IssRetido'), ['', '1', 'sim', 'true', '2', 'nao', 'não', 'false']) of
          0: // Vazio: deduzir do TipoTributacao
          begin
            if CampoTecno('TipoTributacao') = '5' then
            begin
              SetarCampoCurrencyValor('BaseCalculo', 'vBCST', true);
              SetarCampoCurrencyValor('ValorIss', 'vISSST', true);
              if CampoCidade('vISSST') = '0.00' then
                SetarCampoCurrencyValor('ValorISSRetido', 'vISSST', true);
              _IssRetido := '1';
            end
            else
            begin
              if CampoTecno('OptanteSimplesNacional') = '1' then
              begin
                SetarCampoValor('vISS', '0.00');
                SetarCampoValor('vBCISS', '0.00');
                _IssRetido := '2';
              end
              else
              begin
                SetarCampoCurrencyValor('BaseCalculo', 'vBCISS', false);
                SetarCampoCurrencyValor('ValorIss', 'vISS', false);
                _IssRetido := '2';
              end;
            end;
          end;
          1, 2, 3:
          begin
            SetarCampoCurrencyValor('BaseCalculo', 'vBCST', true);
            SetarCampoCurrencyValor('ValorIss', 'vISSST', true);
            if CampoCidade('vISSST') = '0.00' then
              SetarCampoCurrencyValor('ValorISSRetido', 'vISSST', true);
            _IssRetido := '1';
          end;
          4, 5, 6, 7:
          begin
            if CampoTecno('OptanteSimplesNacional') = '1' then
            begin
              SetarCampoValor('vISS', '0.00');
              SetarCampoValor('vBCISS', '0.00');
              _IssRetido := '2';
            end
            else
            begin
              SetarCampoCurrencyValor('BaseCalculo', 'vBCISS', false);
              SetarCampoCurrencyValor('ValorIss', 'vISS', false);
              _IssRetido := '2';
            end;
          end
        else
          RaiseException('Valor inválido para o campo IssRetido. Valores aceitos: 1, sim, true, 2, nao, não, false.');
        end;

        if DivideCampoPorcentagem(CampoTecno('AliquotaISS')) then
        begin
          if _IssRetido = '1' then
            SetarCampoCurrencyValor('AliquotaISS', 'pISSST', true)
          else
          begin
            if CampoTecno('OptanteSimplesNacional') = '1' then
             begin
              SetarCampoValor('pISS', '0.00');
             end
             else
              SetarCampoCurrencyValor('AliquotaISS', 'pISS', false);
          end;
        end
        else
          RaiseException('Valor inválido para o campo AliquotaISS.');
          

        SetarCampoCurrencyValor('ValorINSS', 'vRetINSS', false);
        _ValorCampo := CampoCidade('vRetINSS');
        if _ValorCampo <> '' then
        begin
          SetarCampoCurrencyValor('BaseCalculo', 'vBCINSS', false);
          SetarCampoCurrencyValor('AliquotaINSS', 'pRetINSS', false);
        end;
        
        SetarCampoCurrencyValor('ValorIR', 'vRetIR', false);
        _ValorCampo := CampoCidade('vRetIR');
        if _ValorCampo <> '' then
        begin
          SetarCampoCurrencyValor('BaseCalculo', 'vBCRetIR', false);
          SetarCampoCurrencyValor('AliquotaIR', 'pRetIR', false);
        end;
        
        SetarCampoCurrencyValor('ValorCOFINS', 'vRetCOFINS', false);
        _ValorCampo := CampoCidade('vRetCOFINS');
        if _ValorCampo <> '' then
        begin
          SetarCampoCurrencyValor('BaseCalculo', 'vBCCOFINS', false);
          SetarCampoCurrencyValor('AliquotaCOFINS', 'pRetCOFINS', false);
        end;
        
        SetarCampoCurrencyValor('ValorCSLL', 'vRetCSLL', false);
        _ValorCampo := CampoCidade('vRetCSLL');
        if _ValorCampo <> '' then
        begin
          SetarCampoCurrencyValor('BaseCalculo', 'vBCCSLL', false);
          SetarCampoCurrencyValor('AliquotaCSLL', 'pRetCSLL', false);
        end;
        
        SetarCampoCurrencyValor('ValorPIS', 'vRetPISPASEP', false);
        _ValorCampo := CampoCidade('vRetPISPASEP');
        if _ValorCampo <> '' then
        begin
          SetarCampoCurrencyValor('BaseCalculo', 'vBCPISPASEP', false);
          SetarCampoCurrencyValor('AliquotaPIS', 'pRetPISPASEP', false);
        end;
        
        _DsCidadeAtual.Post;

        _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_SERVICO);
        _QtdeServicos := _DsTecnoAtual.RecordCount;
        _DsTecnoAtual.First;

        //Inicio preenchimento multiplos itens
        while not _DsTecnoAtual.Eof do
        begin
          _DsCidadeAtual.Append;
          _NumeroServico := _NumeroServico + 1;
          case AnsiIndexText(_IssRetido, ['1', '2']) of
            0:
            begin
              SetarCampoCurrencyValor('BaseCalculo', 'vBCST', true);
              SetarCampoCurrencyValor('ValorIss', 'vISSST', true);
              if CampoCidade('vISSST') = '0.00' then
                SetarCampoCurrencyValor('ValorISSRetido', 'vISSST', true);
            end;
            1:
            begin
              if TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('OptanteSimplesNacional').AsString = '1' then
              begin
                SetarCampoValor('vBCISS', '0.00');
                SetarCampoValor('vISS', '0.00');
              end
              else
              begin
                SetarCampoCurrencyValor('BaseCalculo', 'vBCISS', false);
                SetarCampoCurrencyValor('ValorIss', 'vISS', false);
              end;
            end;
          end;

          if DivideCampoPorcentagem(CampoTecno('AliquotaServico')) then
          begin
            if _IssRetido = '1' then
              SetarCampoCurrencyValor('AliquotaServico', 'pISSST', true)
            else
            begin
             if TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('OptanteSimplesNacional').AsString = '1' then
              SetarCampoValor('pISS', '0.00')
             else
              SetarCampoCurrencyValor('AliquotaServico', 'pISS', false);
            end;
          end
          else
            RaiseException('Valor inválido para o campo AliquotaServico.');

          SetarCampoValor('nItem', inttostr(_NumeroServico));
          _ValorCampo := CampoTecno('CodigoCnae');
          if _ValorCampo = '' then 
            SetarCampoObrigatorioTamanho('CodigoTributacaoMunicipio', 'cServ', 60)
          else
            SetarCampoObrigatorioTamanho('CodigoCnae', 'cServ', 60);
          _ValorCampo := CampoTecno('CodigoItemListaServico');
          _ValorCampo := FormatarCodigoItemListaServico(_ValorCampo, False);  // Infisc: sem ponto no ItemListaServico
          VerificaSeEhNumero('CodigoItemListaServico', _ValorCampo);
          SetarCampoObrigatorioValorTamanho('cLCServ', 'CodigoItemListaServico', _ValorCampo, 4);

          SetarCampoObrigatorioTamanho('DiscriminacaoServico', 'xServ', 500);

          SetarCampoValor('localTributacao', _LocalTributacao);

          SetarCampoValor('localVerifResServ', '1');
          if CampoTecno('UnidadeServico') = '' then
            SetarCampoValor('uTrib', 'un')
          else
            SetarCampoObrigatorioTamanho('UnidadeServico', 'uTrib', 2);

          SetarCampoCurrencyValor('QuantidadeServicos', 'qTrib', true);

          _ValorCampo := CampoCidade('qTrib');
          if _ValorCampo = '0.00' then
            SetarCampoValor('qTrib', '1.00');

          SetarCampoCurrencyValor('ValorUnitarioServico', 'vUnit', true);
          _ValorCampo := CampoCidade('vUnit');
          if _ValorCampo = '0.00' then
            SetarCampoCurrencyValor('ValorServicos', 'vUnit', true);

          SetarCampoCurrencyValor('ValorServicos', 'vServ', true);

          _DsCidadeAtual.Post;
          _DsTecnoAtual.Next;
        end;
        _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA);
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_SERV);

        _DsCidadeAtual.First;
        _vISS := 0.00;
        _vBC := 0.00;
        _vServ := 0.00;
        _vDesc := 0.00;
        while not _DsCidadeAtual.Eof do
        begin
          _vServ := _vServ + (AnyCurrencyToCurrency(CampoCidade('vServ')));
          _vDesc := _vDesc + (AnyCurrencyToCurrency(CampoCidade('vDesc')));

          if _IssRetido = '1' then
          begin
            _vISS := _vISS + (AnyCurrencyToCurrency(CampoCidade('vISSST')));
            _vBC := _vBC + (AnyCurrencyToCurrency(CampoCidade('vBCST')));
          end
          else
          begin
            _vISS := _vISS + (AnyCurrencyToCurrency(CampoCidade('vISS')));
            _vBC := _vBC + (AnyCurrencyToCurrency(CampoCidade('vBCISS')));
          end;
          _DsCidadeAtual.Next;
        end;

        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_NOTA);

        //Campos Totais Nota
        SetarCampoValor('vServ', CurrencyToXsdCurrency(_vServ));
        if _vDesc <> 0.00 then
          SetarCampoValor('vDesc', CurrencyToXsdCurrency(_vDesc));
        if _IssRetido = '1' then
        begin
          SetarCampoValor('vSTISS', CurrencyToXsdCurrency(_vISS));
          SetarCampoValor('vBCSTISS', CurrencyToXsdCurrency(_vBC));
        end
        else
        begin
          if TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA).FieldByName('OptanteSimplesNacional').AsString = '1' then
          begin
            SetarCampoValor('vISS', '0.00');
            SetarCampoValor('vBCISS', '0.00');
          end
          else
          begin
            SetarCampoValor('vBCISS', CurrencyToXsdCurrency(_vBC));
            SetarCampoValor('vISS', CurrencyToXsdCurrency(_vISS));
          end
        end;

        SetarCampoCurrencyValor('ValorINSS', 'vRetINSS', false);
        SetarCampoCurrencyValor('ValorIR', 'vRetIR', false);
        SetarCampoCurrencyValor('ValorCOFINS', 'vRetCOFINS', false);
        SetarCampoCurrencyValor('ValorCSLL', 'vRetCSLL', false); 
        SetarCampoCurrencyValor('ValorPIS', 'vRetPISPASEP', false); 
        
        
        SetarCampoValor('vtNF', CurrencyToXsdCurrency(_vServ));
        SetarCampoCurrencyValor('ValorLiquidoNFSe', 'vtLiq', true);
        SetarCampoValor('infAdicLT', _LocalTributacao);

        _DsCidadeAtual.Post;
        
        //Campos informacoes adicionais
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_ADIC);
        _DsCidadeAtual.Append;        
        _ValorCampo := CampoTecno('OutrasInformacoes');
        SetarCampoValor('infAdicionais',_ValorCampo);
        _DsCidadeAtual.Post;

        _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_PAGAMENTO);
        _DsTecnoAtual.First;
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_FATURA);

        while not _DsTecnoAtual.Eof do
        begin
          _DsCidadeAtual.Append;
          
          _NumeroServico := _NumeroServico + 1;
          SetarCampoValor('nItem', inttostr(_NumeroServico));

          if CampoTecno('Parcela') <> '' then
          begin
            VerificaSeEhNumero('Parcela', CampoTecno('Parcela'));
            SetarCampoObrigatorioTamanho('Parcela', 'nFat', 2);
          end
          else
            SetarCampoValor('nFat', '1');

          if CampoTecno('ValorParcela') <> '' then
            SetarCampoCurrencyValor('ValorParcela', 'vFat', True)
          else
            SetarCampoValor('vFat', '0');

          try
            _ValorCampo := FormatAnyDateTime(CampoTecno('DataVencimentoParcela'), 'yyyy-mm-dd');
            SetarCampoValor('dVenc', _ValorCampo);
          except
            RaiseException('Valor inválido para o campo DataVencimentoParcela, Formato aceito: yyyy-mm-dd');
          end;

          _DsCidadeAtual.Post;
          _DsTecnoAtual.Next;
        end;
        
        _DsTecnoAtual := TecnoNFSeDS.GetDataSetByName(DSTECNO_NOTA);
        _DsCidadeAtual := Datasets.GetDataSetByName(DSCIDADE_NOTA);
        
        _DsTecnoAtual.Next;
      end;  
      SetarCamposMunicipioDs(['envioLote', 'NFS_e','motCanc','det','fat','infAdic']);
    end
    else
    begin
      Datasets.LoadFromTx2Content(_tx2.Text);
    end;
  finally
    _tx2.Free;
    _CamposMunicipio.Free;
    _cdsPaises.Free;
    Progress('Arquivo TX2 carregado com Sucesso');
  end;
end.