{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml, _SituacaoLote : string;
begin
  Progress('Carregando configurações de XSDDataset.');
  Datasets.XsdElementName := 'ConsultarLoteRpsResposta';
  Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;

  _Xml := StringReplace(Input, 'ConsultarNfseResult', 'ConsultarLoteRpsResult', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, 'ConsultarNfseResponse', 'ConsultarLoteRpsResponse', [rfReplaceAll]);

  if Pos('<!--CRLF-->', _Xml) > 0 then
  begin
    _Xml := StringReplace(_Xml, '<!--CRLF-->', #13#10, [rfReplaceAll]);
    _Xml := XmlDeepNodeSearch(_Xml, 'ConsultarLoteRpsResult', '//*[local-name()="ConsultarLoteRpsResult"]');
    _Xml := StringReplace(_Xml, #13#10, '<!--CRLF-->', [rfReplaceAll]);
  end
  else
    _Xml := XmlDeepNodeSearch(_Xml, 'ConsultarLoteRpsResult', '//*[local-name()="ConsultarLoteRpsResult"]');

  _Xml := StringReplace(_Xml, 'ConsultarLoteRpsResult', 'ConsultarLoteRpsResposta', [rfReplaceAll]);

  if Pos('<faultstring',_Xml) > 0 then
    Params.Add('faultstring='+_Xml)
  else
  begin
    Datasets.LoadFromXMLContent(_Xml);
    Params.Add('XmlLote='+_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
