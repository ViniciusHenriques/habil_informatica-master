{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params: TStringList;
}
Var
  _Xml : string;
begin
  Progress('Carregando configurações de XSDDataset.');
  Datasets.ConfigSection := 'RETORNO_ENVIAR';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;
  _Xml := StringReplace(Input, 'tcRetornoLoteNFSe', 'tcRetornoLoteRps', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, 'tcValidaLoteNFSe', 'tcValidaLoteRps', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, 'tcRetNFSe', 'tcRetRps', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, 'tcInfRetNFSe', 'tcInfRetRps', [rfReplaceAll]);

  _Xml := XmlDeepNodeSearch(_Xml, Datasets.XsdElementName, '//*[local-name()="tcRetornoLoteRps"]');

  if Pos('<faultstring',Input) > 0 then
    Params.Add('faultstring='+Input)
  else
  begin
    Datasets.LoadFromXMLContent(_Xml);
    Params.Add('Xml='+_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
